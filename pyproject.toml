[project]
name = "bubblesub"
version = "0.0"
description = "ASS subtitle editor"
readme = "README.md"
license = { text = "GNU General Public License v3 (GPLv3)" }
authors = [{ name = "Marcin Kurczewski", email = "dash@wind.garden" }]
keywords = ["subtitle", "editor", "ASS"]
classifiers = [
    "Environment :: X11 Applications :: Qt",
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Topic :: Text Editors",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Multimedia :: Video"
]
requires-python = '>=3.9'
urls = { "Homepage" = "https://github.com/bubblesub/bubblesub" }
dependencies = [
    "ffms2",
    "numpy",
    "pyfftw",
    "PyQT5",
    "qasync",
    "regex",
    "pyqtcolordialog",
    "python-mpv",
    "ass-parser",
    "ass-renderer",
    "ass-tag-parser",
    "Pillow",
    "pyyaml",
    "parsimonious",
    "pluginbase",
    "lazy-import",
    "sortedcontainers",
    "pynvim",
    "pyenchant; platform_system==\"Linux\" and platform_machine==\"x86_64\"",
    "pyspellchecker; platform_system==\"Windows\" and platform_machine==\"x86_64\"",
]

[build-system]
requires = ["uv_build"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-root = ""
module-name = "bubblesub"

[dependency-groups]
dev = [
    "docstring_parser",
    "mypy",
    "pytest",
    "pytest-qt",
    "pyScss"
]

[project.scripts]
bubblesub = "bubblesub.__main__:main"

[tool.black]
line-length = 79

[tool.isort]
known_third_party = ["PIL", "PyQt5", "ass_tag_parser", "docstring_parser", "enchant", "ffms2", "lazy_import", "mpv", "numpy", "parsimonious", "pluginbase", "pyqtcolordialog", "pytest", "qasync", "regex", "sortedcontainers", "speech_recognition", "spellchecker", "yaml"]
known_library = ["dataclasses"]
profile = "black"
line_length = 79

[tool.pylint.master]
jobs = 0

[tool.pylint.basic]
good-names = [
    "ex","_","w","h","i","j","x","y","x1","x2","y1","y2",
    "classproperty",
    "headerData",
    "columnCount",
    "rowCount",
    "keyPressEvent",
    "inputMethodEvent",
    "focusInEvent",
    "mousePressEvent",
    "mouseMoveEvent",
    "mouseReleaseEvent",
    "resizeEvent",
    "paintEvent",
    "wheelEvent",
    "changeEvent",
    "closeEvent",
    "highlightBlock",
    "keyboardSearch",
    "setData",
    "initializeGL",
    "paintGL",
    "sizeHint",
    "showMessage",
    "eventFilter"
]

[tool.pylint.format]
max-line-length = 79

[tool.pylint.messages_control]
reports = false
disable = [
    "import-error",
    "missing-docstring",
    "unused-argument",
    "duplicate-code",
    "too-many-return-statements",
    "too-many-arguments",
    "too-many-positional-arguments",
    "too-many-locals",
    "too-many-instance-attributes",
    "too-many-public-methods",
    "too-few-public-methods",
]

[tool.pylint.typecheck]
ignored-modules = [
    "PyQt5.QtGui",
    "PyQt5.QtCore",
    "PyQt5.QtWidgets",
    "numpy",
]

extension-pkg-whitelist = [
    "mpv",
    "PyQt5.QtOpenGL"
]

[tool.pylint.miscellaneous]
notes = ["FIXME", "TODO"]

[tool.pytest.ini_options]
markers = [
    "gui: tests that need qt (deselect with '-m \"not gui\"')",
]
